name: build

on:
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - "v*"
  pull_request:

permissions:
  contents: write
  packages: write

jobs:
  docker:
    name: Build and publish Docker images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./fs.Dockerfile
            image: ghcr.io/cluster-craftsmen/teamproject-cluster-craftsmen-fs
          - dockerfile: ./fe.Dockerfile
            image: ghcr.io/cluster-craftsmen/teamproject-cluster-craftsmen-fe
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=semver,pattern={{raw}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and publish image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event.pull_request.head.repo.full_name == 'cluster-craftsmen/teamproject-cluster-craftsmen' || github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ github.event.pull_request.head.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}